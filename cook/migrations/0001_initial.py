# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-11-21 17:55
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_category_name', message='Category name must be Alphanumeric', regex='^[a-zA-Z]*$')])),
                ('order', models.DecimalField(decimal_places=0, max_digits=2)),
            ],
        ),
        migrations.CreateModel(
            name='CookOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.DecimalField(decimal_places=0, max_digits=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CookTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('0', 'started'), ('1', 'ready'), ('2', 'done')], default='0', max_length=1)),
                ('priority', models.CharField(choices=[('0', 'normal'), ('1', 'important'), ('2', 'for yesterday')], default='0', max_length=1)),
                ('comment', models.CharField(max_length=300, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('value', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('av', models.CharField(choices=[('0', 'available'), ('1', 'not available')], max_length=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('tax', models.DecimalField(decimal_places=2, max_digits=4)),
                ('description', models.CharField(max_length=300, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cook.Category')),
            ],
        ),
        migrations.CreateModel(
            name='DishPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cook.Currency')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cook.Dish')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('position', models.CharField(choices=[('0', 'waiter'), ('1', 'cook'), ('2', 'provaider')], max_length=1)),
                ('login', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(default='password', max_length=50)),
                ('phonenumber', models.CharField(max_length=12)),
                ('status', models.CharField(choices=[('0', 'offline'), ('1', 'notactive'), ('2', 'active')], default='0', max_length=1)),
                ('active', models.CharField(choices=[('0', 'active'), ('1', 'notactive')], default='0', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='LoginLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('0', 'offline'), ('1', 'notactive'), ('2', 'active')], max_length=1)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cook.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('av', models.CharField(choices=[('0', 'small'), ('1', 'medium'), ('2', 'large')], max_length=2)),
                ('unit', models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('default_currency', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='cook.Currency')),
                ('users', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WaiterOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.DecimalField(decimal_places=0, max_digits=2)),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('price_default', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('comment', models.CharField(max_length=300, null=True)),
                ('level', models.DecimalField(decimal_places=0, max_digits=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cook.Currency')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cook.Dish')),
            ],
        ),
        migrations.CreateModel(
            name='WaiterTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('price_default', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('table', models.IntegerField()),
                ('state', models.CharField(choices=[('0', 'started'), ('1', 'ready'), ('2', 'done')], default='0', max_length=1)),
                ('comment', models.CharField(max_length=200, null=True)),
                ('levels', models.DecimalField(decimal_places=0, max_digits=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cook.Employee')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cook.Currency')),
            ],
        ),
        migrations.CreateModel(
            name='WaiterTaskOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership', to='cook.WaiterOrder')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='membership', to='cook.WaiterTask')),
            ],
        ),
        migrations.AddField(
            model_name='waitertask',
            name='orders',
            field=models.ManyToManyField(related_name='orders', through='cook.WaiterTaskOrder', to='cook.WaiterOrder'),
        ),
        migrations.AddField(
            model_name='waitertask',
            name='waiter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='waiter', to='cook.Employee'),
        ),
        migrations.AddField(
            model_name='employee',
            name='restaurant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cook.RestaurantDetail'),
        ),
        migrations.AddField(
            model_name='dish',
            name='products',
            field=models.ManyToManyField(to='cook.Product'),
        ),
        migrations.AddField(
            model_name='cooktask',
            name='cook',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cook', to='cook.Employee'),
        ),
        migrations.AddField(
            model_name='cooktask',
            name='orders',
            field=models.ManyToManyField(null=True, related_name='orders', to='cook.CookOrder'),
        ),
        migrations.AddField(
            model_name='cooktask',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cook.Employee'),
        ),
        migrations.AddField(
            model_name='cookorder',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='cook.Product'),
        ),
    ]
